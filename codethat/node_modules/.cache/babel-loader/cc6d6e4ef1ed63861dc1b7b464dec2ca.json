{"ast":null,"code":"import { courses, questions } from './mock.json';\n\nfunction filterByKeyword(items, keyword) {\n  const lowered = keyword.toLowerCase();\n  return items.filter(_ref => {\n    let {\n      title\n    } = _ref;\n    return title.toLowerCase().includes(lowered);\n  });\n}\n\nexport function getCourses(keyword) {\n  if (!keyword) return courses;\n  return filterByKeyword(courses, keyword);\n}\nexport function getCourseBySlug(courseSlug) {\n  return courses.find(course => course.slug === courseSlug);\n}\nexport function getQuestions(keyword) {\n  if (!keyword) return questions;\n  return filterByKeyword(questions, keyword);\n}\nexport function getQuestionById(questionId) {\n  return questions.find(question => question.id === questionId);\n}\nconst WISHLIST_KEY = 'codethat-wishlist';\nconst wishlist = JSON.parse(localStorage.getItem(WISHLIST_KEY) || '{}');\nexport function addWishlist(courseSlug) {\n  wishlist[courseSlug] = true;\n  localStorage.setItem(WISHLIST_KEY, JSON.stringify(wishlist));\n}\nexport function deleteWishlist(courseSlug) {\n  delete wishlist[courseSlug];\n  localStorage.setItem(WISHLIST_KEY, JSON.stringify(wishlist));\n}\nexport function getWishlist() {\n  return courses.filter(course => wishlist[course.slug]);\n}","map":{"version":3,"names":["courses","questions","filterByKeyword","items","keyword","lowered","toLowerCase","filter","title","includes","getCourses","getCourseBySlug","courseSlug","find","course","slug","getQuestions","getQuestionById","questionId","question","id","WISHLIST_KEY","wishlist","JSON","parse","localStorage","getItem","addWishlist","setItem","stringify","deleteWishlist","getWishlist"],"sources":["/Users/baegmingi/push-api/codethat/src/api/index.js"],"sourcesContent":["import { courses, questions } from './mock.json';\n\nfunction filterByKeyword(items, keyword) {\n  const lowered = keyword.toLowerCase();\n  return items.filter(({ title }) => title.toLowerCase().includes(lowered));\n}\n\nexport function getCourses(keyword) {\n  if (!keyword) return courses;\n  return filterByKeyword(courses, keyword);\n}\n\nexport function getCourseBySlug(courseSlug) {\n  return courses.find((course) => course.slug === courseSlug);\n}\n\nexport function getQuestions(keyword) {\n  if (!keyword) return questions;\n  return filterByKeyword(questions, keyword);\n}\n\nexport function getQuestionById(questionId) {\n  return questions.find((question) => question.id === questionId);\n}\n\nconst WISHLIST_KEY = 'codethat-wishlist';\nconst wishlist = JSON.parse(localStorage.getItem(WISHLIST_KEY) || '{}');\n\nexport function addWishlist(courseSlug) {\n  wishlist[courseSlug] = true;\n  localStorage.setItem(WISHLIST_KEY, JSON.stringify(wishlist));\n}\n\nexport function deleteWishlist(courseSlug) {\n  delete wishlist[courseSlug];\n  localStorage.setItem(WISHLIST_KEY, JSON.stringify(wishlist));\n}\n\nexport function getWishlist() {\n  return courses.filter((course) => wishlist[course.slug]);\n}\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,SAAlB,QAAmC,aAAnC;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,OAAhC,EAAyC;EACvC,MAAMC,OAAO,GAAGD,OAAO,CAACE,WAAR,EAAhB;EACA,OAAOH,KAAK,CAACI,MAAN,CAAa;IAAA,IAAC;MAAEC;IAAF,CAAD;IAAA,OAAeA,KAAK,CAACF,WAAN,GAAoBG,QAApB,CAA6BJ,OAA7B,CAAf;EAAA,CAAb,CAAP;AACD;;AAED,OAAO,SAASK,UAAT,CAAoBN,OAApB,EAA6B;EAClC,IAAI,CAACA,OAAL,EAAc,OAAOJ,OAAP;EACd,OAAOE,eAAe,CAACF,OAAD,EAAUI,OAAV,CAAtB;AACD;AAED,OAAO,SAASO,eAAT,CAAyBC,UAAzB,EAAqC;EAC1C,OAAOZ,OAAO,CAACa,IAAR,CAAcC,MAAD,IAAYA,MAAM,CAACC,IAAP,KAAgBH,UAAzC,CAAP;AACD;AAED,OAAO,SAASI,YAAT,CAAsBZ,OAAtB,EAA+B;EACpC,IAAI,CAACA,OAAL,EAAc,OAAOH,SAAP;EACd,OAAOC,eAAe,CAACD,SAAD,EAAYG,OAAZ,CAAtB;AACD;AAED,OAAO,SAASa,eAAT,CAAyBC,UAAzB,EAAqC;EAC1C,OAAOjB,SAAS,CAACY,IAAV,CAAgBM,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBF,UAA7C,CAAP;AACD;AAED,MAAMG,YAAY,GAAG,mBAArB;AACA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBL,YAArB,KAAsC,IAAjD,CAAjB;AAEA,OAAO,SAASM,WAAT,CAAqBf,UAArB,EAAiC;EACtCU,QAAQ,CAACV,UAAD,CAAR,GAAuB,IAAvB;EACAa,YAAY,CAACG,OAAb,CAAqBP,YAArB,EAAmCE,IAAI,CAACM,SAAL,CAAeP,QAAf,CAAnC;AACD;AAED,OAAO,SAASQ,cAAT,CAAwBlB,UAAxB,EAAoC;EACzC,OAAOU,QAAQ,CAACV,UAAD,CAAf;EACAa,YAAY,CAACG,OAAb,CAAqBP,YAArB,EAAmCE,IAAI,CAACM,SAAL,CAAeP,QAAf,CAAnC;AACD;AAED,OAAO,SAASS,WAAT,GAAuB;EAC5B,OAAO/B,OAAO,CAACO,MAAR,CAAgBO,MAAD,IAAYQ,QAAQ,CAACR,MAAM,CAACC,IAAR,CAAnC,CAAP;AACD"},"metadata":{},"sourceType":"module"}